imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @GripliAuthBundle/Resources/config/admin.xml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:         
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true
    translator:    { fallback: %locale% }
# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ GripliAuthBundle]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
#doctrine:
  #  dbal:
  #      driver:   "%database_driver%"
  #      host:     "%database_host%"
  #      port:     "%database_port%"
  #      dbname:   "%database_name%"
  #      user:     "%database_user%"
   #     password: "%database_password%"
   #     charset:  UTF8
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

  #  orm:
  #      auto_generate_proxy_classes: "%kernel.debug%"
  #      auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

doctrine_mongodb:
    connections:
        default:
            server: mongodb://localhost:27017
            options: {}
    default_database: test_database
    document_managers:
        default:
            auto_mapping: true
            
#stof doctrine extension
stof_doctrine_extensions:
    mongodb:
        default:
            timestampable: true
            
fos_user:
    db_driver: mongodb # other valid values are 'mongodb', 'couchdb'
    firewall_name: dev
    user_class: Gripli\AuthBundle\Document\Users
    # On utilise twig_swift pour pouvoir envoyer un email en HTML
    service:
        mailer: fos_user.mailer.twig_swift
    # Permet de renseigner le nouveau formulaire d'inscription
    registration:
        confirmation:
            enabled:    true
            template: GripliAuthBundle:User:registration.email.twig
            from_email:
                address:        haifi.anass1@gmail.com
                sender_name:    Admin kapstages
        form:
            type: gripli_user_registration
     # Permet de renseigner le nouveau formulaire d'edition
    profile:
        form:
            type: fos_user_profile
            
sonata_doctrine_mongo_db_admin:
    templates:
        form:
            - SonataDoctrineMongoDBAdminBundle:Form:form_admin_fields.html.twig
        filter:
            - SonataDoctrineMongoDBAdminBundle:Form:filter_admin_fields.html.twig
        types:
            list:
                array:      SonataAdminBundle:CRUD:list_array.html.twig
                boolean:    SonataAdminBundle:CRUD:list_boolean.html.twig
                date:       SonataAdminBundle:CRUD:list_date.html.twig
                time:       SonataAdminBundle:CRUD:list_time.html.twig
                datetime:   SonataAdminBundle:CRUD:list_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_list_field.html.twig
                trans:      SonataAdminBundle:CRUD:list_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_list_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_list_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_list_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_list_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_list_field.html.twig
                identifier: SonataAdminBundle:CRUD:base_list_field.html.twig

            show:
                array:      SonataAdminBundle:CRUD:show_array.html.twig
                boolean:    SonataAdminBundle:CRUD:show_boolean.html.twig
                date:       SonataAdminBundle:CRUD:show_date.html.twig
                time:       SonataAdminBundle:CRUD:show_time.html.twig
                datetime:   SonataAdminBundle:CRUD:show_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_show_field.html.twig
                trans:      SonataAdminBundle:CRUD:show_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_show_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_show_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_show_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_show_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_show_field.html.twig
sonata_admin:
    title: gripli Admin
 
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
 
        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:  
            
fos_facebook:
    alias:  facebook
    app_id: 647280612007270
    secret: 1bee7bd5623bde8060be59243f3a4ba4
    cookie: true
    permissions: [email, user_birthday, user_location]     

#old_sound_rabbit_mq:
 #   connections:
  #      default:
  #          host:     'localhost'
  #          port:     5672
   #         user:     'guest'
  #          password: 'guest'
   #         vhost:    '/'
   #         lazy:     false
  #  producers:
  #      upload_picture:
  #          connection:       default
  #          exchange_options: {name: 'upload-picture', type: direct}
  #  consumers:
    #    upload_picture:
    #        connection:       default
    #        exchange_options: {name: 'upload-picture', type: direct}
    #        queue_options:    {name: 'upload-picture'}
     #       callback:         upload_picture_service